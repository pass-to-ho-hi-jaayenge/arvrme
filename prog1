using UnityEngine;

public class PlayerMovement : MonoBehaviour
{
    public float speed = 5f;
    private Rigidbody rb;

    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    void Update()
    {
        float moveHorizontal = Input.GetAxis("Horizontal");
        float moveVertical = Input.GetAxis("Vertical");
        Vector3 newPostion = new Vector3(moveHorizontal, 0.0f,moveVertical ) * speed * Time.deltaTime;
        rb.MovePosition(transform.position + newPostion);
    }
}

Solution
Part-A
1. Add 3D Object plane and Player
2. Apply Material
a. Smooth
b. Metallic
c. Rough
3. Add Particles and edit properties like
a. Size
b. Shape
c. Duration
d. Color
e. Loop
f. Delay
Part -B
1. Add free look camera from cinemachine and edit
a. Rig
b. Follow
c. Look
2. Add character controller as component for player

3. Create c# script and attach to player

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
public class TPC : MonoBehaviour
{
public CharacterController controller;
public Transform cam;
public float speed = 6f;
public float turnSmoothTime = 0.1f;
float turnSmoothVelocity;
void Update()
{
float horizontal = Input.GetAxisRaw("Horizontal");
float vertical = Input.GetAxisRaw("Vertical");
Vector3 direction = new Vector3(horizontal, 0f,
vertical).normalized;
if (direction.magnitude >= 0.1f)
{
float targetAngle = Mathf.Atan2(direction.x, direction.z) *
Mathf.Rad2Deg + cam.eulerAngles.y;
float angle = Mathf.SmoothDampAngle(transform.eulerAngles.y,
targetAngle, ref turnSmoothVelocity, turnSmoothTime);
transform.rotation = Quaternion.Euler(0f, angle, 0f);
Vector3 moveDir = Quaternion.Euler(0f, targetAngle, 0f) *
Vector3.forward;
controller.Move(moveDir.normalized * speed *
Time.deltaTime);
}
}
}
